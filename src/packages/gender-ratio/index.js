import echarts from 'echarts'
import Core from '../../core'

const genderRatio = (source, settings) => {
  if (!(source instanceof Array)) {
    console.log('数据类型错误，应为Array')
    return false
  }
  const {
    color = ['#1296DB', '#57eabf']
  } = settings
  const data = JSON.parse(JSON.stringify(source))
  let sum = data[0] + data[1]
  let male = (data[0] / sum * 100).toFixed(2)
  let female = (data[1] / sum * 100).toFixed(2)
  let icons = {
    'male': 'path://M389.551692 624.101147m-31.518854 0a30.801 30.801 0 1 0 63.037708 0 30.801 30.801 0 1 0-63.037708 0ZM652.540362 624.101147m-31.518854 0a30.801 30.801 0 1 0 63.037708 0 30.801 30.801 0 1 0-63.037708 0ZM902.843104 405.38275c0 0-9.282411-79.593779-51.964512-125.764332 0 0 30.007431-16.164145-2.302439-43.842531 0 0-28.825512-6.92369-34.614355-4.602831 0 0-14.973016-50.785663-44.978401-63.476707 0 0-25.40153-6.160303-31.188326 18.464537 0 0-67.462484-34.32169-116.247584-42.98807 0 0-124.576273-23.941272-158.028153-81.907475 0 0-7.225565-14.702863-30.847565-6.064113 0 0-22.539342 17.877159-15.629979 89.412402 0 0 1.925862 14.629185-94.235245-46.910403 0 0-23.828708-6.15007-30.737048 12.299117 0 0-12.277628 43.839461 3.069919 76.157517 0 0-55.372122 9.988492-79.258135 33.845853 0 0-26.881231 34.621519 18.459421 40.003086 0 0-67.6344 38.458917-79.220273 146.908908 0 0-1.352811 76.092026 23.042809 160.503531-5.201465 13.784958-7.291057 28.891004-5.623068 44.325531 4.76349 44.065612 38.811957 79.014588 82.892919 85.201497 13.906731 42.314735 37.644365 81.08269 70.054519 113.492844 54.438866 54.43989 126.81936 84.420715 203.807802 84.420715s149.368936-29.980825 203.807802-84.420715c33.103956-33.103956 57.142441-72.847122 70.917166-116.219955 42.515303-5.446036 76.43688-37.905308 83.272565-80.361259 3.315512-20.59813-0.158612-40.962947-9.029654-58.588373C893.430734 510.723937 906.577149 455.697693 902.843104 405.38275zM249.33009 682.281221c-34.119075-8.148587-59.747779-36.671201-63.562665-71.965032-0.681522-6.302543-0.624217-12.541641 0.088004-18.627243 6.145977 17.761526 13.511735 35.603893 22.354124 52.91721 0 0 18.251689 18.251689 37.06722 11.517311 0.793062 4.607948 1.697665 9.187243 2.710738 13.734816L249.33009 682.281221zM529.296433 881.558847c-130.877793 0-240.674455-91.932806-268.243347-214.608799l-2.24411-20.760836c2.158153-2.558265 4.264117-5.611811 6.28617-9.259898 0 0 2.37714-85.404112 53.145407-136.171356 0 0 44.60694 12.345166 101.533464-19.235087 0 0-23.86657 29.237905-45.412282 44.620243 0 0-12.31856 30.005384 15.386432 33.093722 0 0 85.378529 16.156982 170.757059-40.003086 0 0-4.604878 28.464285 36.18513 19.984147 0 0 33.020044-0.757247 86.126566-41.538045 0 0 11.550057 19.230993 54.978149-4.596691 0 0-1.12359 38.054711 33.489742 96.899934 0 0 15.009855 24.477484 15.009855 67.613934 0 0 3.941775 3.251044 9.851369 6.099928l-3.554966 22.082948C758.519068 798.912545 653.386636 881.558847 529.296433 881.558847zM874.159832 611.744725c-5.579065 34.649148-32.109302 61.567217-66.044182 68.327178 1.058099-4.046153 2.030239-8.120958 2.913353-12.220323 10.411117 0.582261 21.852704-4.29277 29.481452-23.61586 0 0 15.436574-28.598338 31.023574-70.148663C875.205651 585.976852 876.243283 598.807065 874.159832 611.744725z',
    'female': 'path://M291.34919805 657.11903478a39.8730733 39.8730733 0 1 0 81.60639811 0 39.8730733 39.8730733 0 1 0-81.60510356 0z m340.45062006 0a39.8730733 39.8730733 0 1 0 81.60380903 0 39.8730733 39.8730733 0 1 0-81.60380903 0z m293.42392825-122.98760849c-0.05825422-5.56004187-0.19418075-11.16021443-0.46991739-16.81993576 0.1721736-2.98391072 0.34693627-5.9872395 0.52687707-9.01904813 0.48933547-8.22937979-0.87899149-17.15133757-3.68813953-26.52767827-17.97595843-139.40882647-103.83491476-293.22198029-303.44235994-333.03032668a89.16520707 89.16520707 0 0 0 3.80594252-25.72765361c0-54.13888507-48.63321378-98.02761609-108.62470638-98.02761607s-108.62729545 43.88873102-108.62729543 98.02761607a89.14190539 89.14190539 0 0 0 3.87714212 25.95290327c-222.69165164 45.40722442-305.91233897 235.64480158-307.17063017 386.25138409-31.06891852 23.03760308-50.49346528 59.70410509-50.49346528 100.20502946 0 51.6947968 31.63204267 97.16415905 78.75970844 115.97509468 44.82338765 284.49938142 63.7534208 207.63358245 63.7534208 173.87849702 0-15.42960165-6.66169395-59.38823775-8.51029459-112.82936667 16.96362951 31.17895427 38.49956819 60.10152834 64.29971595 85.90297063 70.4746635 70.4746635 164.17334361 109.28492089 263.83725606 109.28492089s193.36518163-38.81025739 263.83725606-109.28492089a377.1456019 377.1456019 0 0 0 44.10750798-53.01134222c-1.73985943 47.34385367-3.06028848 88.11922015-3.06028848 103.17211116 0 33.92078633 32.67544051-8.90901238 67.11792578-153.30310574 3.57810379-15.00369857 6.78338053-29.0830968 9.68314628-42.416841 49.14844002-17.87239538 82.43231351-64.34373025 82.43231351-117.36931239 0-41.12877543-20.02909614-78.31956543-51.95111538-101.28337984z m-857.08530978 101.28467437c0-30.62489189 12.90136842-58.71766693 34.16157044-78.56811678 0.28350388 2.40784118 0.62396745 4.6409197 1.03433609 6.65781034l-0.00776723 0.01294537c8.36918992 65.6680429 16.09111072 121.00178678 23.19553674 167.52360866-35.31241497-18.22192071-58.38367605-54.6579949-58.38367604-95.62624759z m754.17469534 175.07335585c-61.34428507 107.38065509-176.98409435 179.91751806-309.25613131 179.91751807-147.71070041 0-274.68030862-90.46103988-328.4541339-218.88441458 1.62464553-75.73696158 16.7668597-159.96091607 72.42035453-207.93520987 59.84520976-51.58735013 88.96196457-136.34594892 103.03489012-201.57255428 13.02305502 57.30532567 42.7042285 126.43755298 110.36715488 142.26716698 114.8087157 26.85778551 165.68924791 28.20539986 218.13617146 29.0662678 24.84218943 0.40777955 130.26291358-3.9742325 140.86129841 102.06528095 0.00129454 0.00129454-3.86419675 90.45715627-7.10960419 175.07335585z m76.76353044-78.19140614c14.32406597-69.84940151 19.42454676-117.42238846 22.53014407-162.44384047 1.31525088-3.68555045 2.28356551-8.388608 2.89717666-14.19202307 22.02915777 19.90611501 35.45093057 48.51282173 35.45093056 79.75391383-0.00129454 41.92750555-24.1612623 79.11311739-60.87825129 96.88194971z'
  }
  let option = {
    grid: {
      left: '10%',
      right: '10%'
    },
    xAxis: [{type: 'value', show: false, max: 100, min: -100}],
    yAxis: [{ type: 'category', show: false }],
    series: [
      {
        name: '男',
        type: 'bar',
        stack: '性别比例',
        barWidth: 20,
        cursor: 'default',
        label: {
          normal: {
            show: true,
            padding: [0, 0, 50, 0],
            fontWeight: 100,
            color: '#333333',
            formatter: '{b|' + data[0] + '人}',
            rich: {
              b: {
                fontSize: 14,
                color: color[0],
                fontWeight: 600
              }
            }
          }
        },
        itemStyle: {
          normal: {
            borderWidth: 5,
            borderStyle: 'solid',
            borderColor: '#FFFFFF',
            color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [{
              offset: 0,
              color: color[1] // 0% 处的颜色
            }, {
              offset: 1,
              color: color[0] // 100% 处的颜色
            }], false),
            barBorderRadius: 14
          }
        },
        markPoint: {
          symbol: icons.male,
          symbolSize: [40, 40],
          symbolOffset: [-40, 0],
          label: {
            position: 'bottom',
            padding: [5, 0, 0, 0],
            fontSize: 14,
            color: '#333333',
            formatter: '{num|' + male + '%}',
            rich: {
              num: {
                fontSize: 16,
                color: color[0],
                fontWeight: 600,
                lineHeight: 20,
                align: 'center'
              }
            }
          },
          data: [{
            type: 'max'
          }],
          silent: true
        },
        data: [-male]
      },
      {
        name: '女',
        type: 'bar',
        stack: '性别比例',
        barWidth: 20,
        cursor: 'default',
        label: {
          normal: {
            show: true,
            padding: [0, 0, 50, 0],
            fontWeight: 100,
            color: '#333333',
            formatter: '{b|' + data[1] + '人}',
            rich: {
              b: {
                fontSize: 14,
                color: color[0],
                fontWeight: 600
              }
            }
          }
        },
        itemStyle: {
          normal: {
            borderWidth: 5,
            borderStyle: 'solid',
            borderColor: '#FFFFFF',
            color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [{
              offset: 0,
              color: color[0] // 0% 处的颜色
            }, {
              offset: 1,
              color: color[1] // 100% 处的颜色
            }], false),
            barBorderRadius: 14
          }
        },
        markPoint: {
          symbol: icons.female,
          symbolSize: [40, 40],
          symbolOffset: [40, 0],
          label: {
            position: 'bottom',
            padding: [5, 0, 0, 0],
            fontSize: 14,
            color: '#333333',
            formatter: '{num|' + female + '%}',
            rich: {
              num: {
                fontSize: 16,
                color: color[0],
                fontWeight: 600,
                align: 'center'
              }
            }
          },
          data: [{
            type: 'max'
          }],
          silent: true
        },
        data: [female]
      }
    ]
  }
  return option
}
export default {
  name: 'YiGenderRatio',
  mixins: [Core],
  data () {
    this.chartHandler = genderRatio
    return {}
  }
}
